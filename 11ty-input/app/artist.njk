---
title: Artist
backLinkText: Back to your mix
backLinkUrl: /app/1-explore/
---

{% edge 'njk' %}
<div id="artist-detail-app" @vue:mounted="init">
    {% set secondLastImage = artist.images | arrAt(-2) %} <img width="150" height="150" style="max-width: 150px; height: auto; background-color: var(--blue-8)" v-if="'images' in artistData" src="{{ secondLastImage.url }}"/>
    <p>
        <a class="button button-secondary" :href="`https://open.spotify.com/artist/${artistId}`" target="_blank">View artist on
            Spotify &rarr;</a>
    </p>
    <h3 style="margin-top: 1rem">Genres for this artist</h3>
    <ul class="pills" v-if="'genres' in artistData">
        {% for genre in artist.genres %}
            <li style="display: inline-block">
                <a
                    class="pill-link button button-secondary"
                    :class="{'primary-highlight-subtle': isChoosing('{{ genre }}')}"
                    href="/app/genre/?genre={{ genre }}">{{ genre }}</a>
            </li>
        {% endfor %}
    </ul>
    <div>
        <h3>Top tracks for this artist</h3>
        <p>Tap a song below to hear a preview.</p>
        <div>
            <ul class="list-flex flex-wrap track-previews">
                <li v-for="track in artistData.topTracks">
                    <button
                        :title="`${track.name} by ${track.artistStr}`"
                        class="track-preview-button"
                        @click="playTrack(track)"
                        :aria-pressed="playingTrack === track ? 'true' : undefined">
                        <img :src="track.imageUrl" :width="track.imageWidth" :height="track.imageWidth" alt=""/>
                    </button>
                </li>
            </ul>
        </div>
        <div class="playing-track-container" v-if="playingTrack !== null">
            <div class="playing-track">
                <div class="image-and-name">
                    <div>
                        <img :src="playingTrack.imageUrl"/>
                    </div>
                    <div>
                        <p>
                            <strong>${playingTrack.name}</strong>
                        </p>
                        <p>
                            <a v-for="trackArtist in playingTrack.artists" :href="`/app/artist/?artistId=${trackArtist.id}`">${trackArtist.name}</a>
                        </p>
                    </div>
                </div>
                <div class="stop-button">
                    <button @click="playingTrack = null">Ã— Stop</button>
                </div>
                <audio @loadedMetadata="playAudio" id="preview-audio" :src="playingTrack.mp3Url"></audio>
            </div>
        </div>
        <h3>Related artists</h3>
        <ul class="pills">
            {% for relatedArtist in artist.related %}
                <li style="display: inline-block">
                    <a class="pill-link button button-secondary" href="/app/artist/?artistId={{ relatedArtist.id }}">{{ relatedArtist.name }}</a>
                </li>
            {% endfor %}
        </ul>
    </div>
</div>
<script type="module">
    // This is going to mount its own Petite Vue thing
    async function init() {
        loadChosenGenres.bind(this)();
        getArtistData.bind(this)();
    }
    async function updatePreviewPlaylist(event) {
        this.previewPlaylistId = event.target.value;
    }
    async function getArtistData() {
        const artistData = {{ artist | jsonToJs | safe }};
        this.artistData = artistData;
        document.querySelector('h2').innerText = artistData.name
        this.fetched = true;
    }
    async function loadChosenGenres() {
        const chosenGenresJson = localStorage.getItem('chosen-genres') || "[]";
        try {
            const chosenGenres = JSON.parse(chosenGenresJson);
            this.chosenGenres = chosenGenres;
        } catch (err) {
            console.log(err)
            // TODO: show error message?
        }
    }
    async function playTrack(track) {
        console.log("should play track", track)
        this.playingTrack = track;
    }
    async function playAudio(event) {
        event.target.play();
    }
    import {createApp} from "/petite-vue.es.js";
    const artistId = new URL(window.location).searchParams.get('artistId');
    document.querySelector('h2').innerText = "Loading..."
    createApp({
        chosenGenres: [],
        isChoosing(genre) {
            return this.chosenGenres.includes(genre)
        },
        artistId,
        artistData: {},
        fetched: false,
        init,
        playingTrack: null,
        playTrack,
        playAudio,
        $delimiters: ["${", "}"]
    }).mount("#artist-detail-app")
</script>
{% endedge %}