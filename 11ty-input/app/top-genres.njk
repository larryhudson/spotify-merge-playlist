---
title: Your top genres
backLinkText: Back to your mix
backLinkUrl: /app/1-explore/
---

{% edge 'njk' %}
{# <pre> {{ eleventy|dump(2) }}</pre>
<pre>{{ topGenres|dump(2) }}</pre> #}
<div id="genres-pre-js">
    <div class="button-group">
        {% set currentTimeRange = eleventy.edge.query.timeRange or "medium_term" %}
        {% set timeRanges = [{value: 'short_term', label: 'Last 4 weeks'}, {value: 'medium_term', label: 'Last 6 months'}, {value: 'long_term', label: 'All time'}] %}
        {% for timeRange in timeRanges %}
            <form>
                <button class="secondary" {% if currentTimeRange == timeRange.value %} aria-pressed="true" {% endif %} name="timeRange" value="{{ timeRange.value }}">{{ timeRange.label }}</button>
            </form>
        {% endfor %}
    </div>
    <div id="top-genres-app" @vue:mounted="init">
        <ul class="genres initial-pre-js">
            {% set genresToShow = topGenres | arrSlice(0, 10) %}
            {% for genre in genresToShow %}
                <li>
                    <a class="no-underline" href="/app/genre/?genre={{ genre.name | urlencode }}">
                        <span class="genre-name">{{ genre.name }} &rarr;</span>
                        <span class="artist-count" title="{{ genre.count }} of your top artists">{{ genre.count }}×</span>
                    </a>
                    <button class="toggle-button fade-no-js" @click="toggleGenre(genre.name)">
                        <span class="hide-no-js" v-if="isChoosing(genre.name)">
                            × remove
                        </span>
                        <span v-else="">
                            + add
                        </span>
                    </button>
                </li>
            {% endfor %}
        </ul>
        <ul class="genres hide-no-js">
            <li v-for="genre in genresToShow" :class="{'primary-highlight-subtle': isChoosing(genre.name)}">
                <a class="no-underline" :href="`/app/genre/?genre=${encodeURIComponent(genre.name)}`">
                    <span class="genre-name">${genre.name} &rarr;</span>
                    <span class="artist-count" :title="`${genre.count} of your top artists`">${genre.count}×</span>
                </a>
                <button class="toggle-button" @click="toggleGenre(genre.name)">
                    <span v-if="isChoosing(genre.name)">
                        × remove
                    </span>
                    <span v-else="">
                        + add
                    </span>
                </button>
            </li>
        </ul>
        <button class="fade-no-js" v-if="showingAllGenres === false" @click="showingAllGenres = true">
            Show more top genres
        </button>
    </div>
    <script type="module">
        // This is going to mount its own Petite Vue thing
        async function init() {
            console.log("initialising top genres...")
            loadChosenGenres.bind(this)();
            document.querySelectorAll('.initial-pre-js').forEach((element) => {
                element.remove()
            })
        }
        async function loadChosenGenres() {
            const chosenGenresJson = localStorage.getItem('chosen-genres') || "[]";
            try {
                const chosenGenres = JSON.parse(chosenGenresJson);
                this.chosenGenres = chosenGenres;
            } catch (err) {
                console.log(err)
                // TODO: show error message?
            }
        }
        async function updateChosenGenresInLocalStorage() {
            localStorage.setItem('chosen-genres', JSON.stringify(this.chosenGenres));
        }
        async function toggleGenre(genreName) {
            if (this.chosenGenres.includes(genreName)) {
                this.chosenGenres = this.chosenGenres.filter(genre => genre !== genreName);
            } else {
                this.chosenGenres.push(genreName);
            } updateChosenGenresInLocalStorage.bind(this)();
        }
        import {createApp} from "/petite-vue.es.js";
        createApp({
            topGenres: {{ topGenres | jsonToJs | safe }},
            chosenGenres: [],
            init,
            toggleGenre,
            showingAllGenres: false,
            isChoosing(genreName) {
                return this.chosenGenres.includes(genreName)
            },
            get genresToShow() {
                if (this.showingAllGenres) {
                    return this.topGenres;
                } else {
                    return this.topGenres.slice(0, 10);
                }
            },
            $delimiters: ["${", "}"]
        }).mount("#top-genres-app")
    </script>
</div>
{% endedge %}