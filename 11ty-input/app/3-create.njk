---
title: 3. Create your playlist
stepNum: 3
---

{# Name your playlist and hit 'create' #}
<form
    method="POST"
    id="playlist-form"
    action="/create-playlist"
    hidden=""
    :hidden="false"
    @vue:mounted="init"
    @submit.prevent="createPlaylist">
    <p v-if="chosenGenres.length > 0 && chosenTypes.length > 0">
        Give your playlist a name and hit 'Create playlist'. This will create a new playlist in your Spotify account.
    </p>
    <p hidden="" :hidden="false" class="alert" v-if="chosenGenres.length === 0">
        You haven't chosen any genres yet. Before creating your playlist, go back to step 1 and add some genres that will be
        included in your playlist.
    </p>
    <p hidden="" :hidden="false" class="alert" v-if="chosenTypes.length === 0">
        You haven't chosen any playlist types yet. Before creating your playlist, go back to step 2 and add some playlist types
        that will be included in your playlist.
    </p>
    <h3>Optional: tweak your playlist</h3>
    <p>You can add filters to fine tune the songs that are added to your playlist.</p>
    <div v-if="chosenFilters.length > 0">
        <p>Chosen filters:</p>
        <ul>
            <li v-for="filter in chosenFilters">
                ${filter.filterType} is ${filter.condition} ${filter.value}
            </li>
        </ul>
    </div>
    <p>
        <a class="button button-generous" href="/app/track-filters/">
            <span v-if="chosenFilters.length === 0">Add filters</span>
            <span v-else="">Edit filters</span>
            &rarr;
        </a>
    </p>
    <h3>Name your playlist</h3>
    <label style="margin-top: 1rem; font-weight: bold">Playlist name <input type="text" name="name" style="margin-left: 0.5rem;"/>
    </label>
    <input v-for="filter in chosenFilters" type="hidden" name="filter" :value="JSON.stringify(filter)"/>
    <input v-for="genre in chosenGenres" type="hidden" name="genre" :value="genre"/>
    <input v-for="playlistType in chosenTypes" type="hidden" name="playlist-type" :value="playlistType"/>
    <div style="margin-top: 1rem;">
        <button class="primary-highlight-obvious">
            <span v-if="!creatingPlaylist">Create playlist</span>
            <span v-else="">Creating playlist...</span>
        </button>
    </div>
    <div style="display: inline-block" v-if="createdPlaylist">
        <div v-if="'url' in createdPlaylist">
            <p>
                Playlist created!
                <a class="button-secondary" :href="createdPlaylist.url" target="_blank">View on Spotify</a>
            </p>
        </div>
        <div v-if="createdPlaylist.status == 'error'">
            <p>Error while creating playlist:</p>
            <pre>${JSON.stringify(createdPlaylist)}</pre>
        </div>
    </div>
</p></form><script type="module">
// This is going to mount its own Petite Vue thing
async function init() {
    console.log("initialising chosen playlists...")
    loadChosenGenres.bind(this)();
    console.log("initialising chosen types...")
    loadChosenTypes.bind(this)();
    console.log("initialising chosen filters...")
    loadChosenFilters.bind(this)();
}
async function loadChosenGenres() {
    const chosenGenresJson = localStorage.getItem('chosen-genres') || "[]";
    try {
        const chosenGenres = JSON.parse(chosenGenresJson);
        this.chosenGenres = chosenGenres;
    } catch (err) {
        console.log(err)
        // TODO: show error message?
    }
}
async function loadChosenFilters() {
    const chosenFiltersJson = localStorage.getItem('chosen-filters') || "[]";
    try {
        const chosenFilters = JSON.parse(chosenFiltersJson);
        this.chosenFilters = chosenFilters;
    } catch (err) {
        console.log(err)
        // TODO: show error message?
    }
}
async function loadChosenTypes() {
    const chosenTypesJson = localStorage.getItem('chosen-playlist-types') || "[]";
    try {
        const chosenTypes = JSON.parse(chosenTypesJson);
        this.chosenTypes = chosenTypes;
    } catch (err) {
        console.log(err)
        // TODO: show error message?
    }
}
async function createPlaylist() {
    const playlistForm = document.getElementById("playlist-form");
    const formData = new FormData(playlistForm);
    this.creatingPlaylist = true;
    const createResponse = await fetch(playlistForm.getAttribute("action"), {
        method: "POST",
        body: formData
    }).then((r) => r.json());
    if (createResponse.error) { // handle error
    }
    this.createdPlaylist = createResponse;
    this.creatingPlaylist = false;
}
import {createApp} from "/petite-vue.es.js";
const petiteVueApp = createApp({
    creatingPlaylist: false,
    createdPlaylist: null,
    createPlaylist,
    chosenGenres: [],
    chosenTypes: [],
    chosenFilters: [],
    init,
    $delimiters: ["${", "}"]
})
petiteVueApp.mount("#playlist-form")</script>